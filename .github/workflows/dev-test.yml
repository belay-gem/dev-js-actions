on:
  push:
    branches:
      - main
jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      doc_user_name: ${{ steps.step1.outputs.doc_user_name }}
      aws_region: ${{ steps.step1.outputs.aws_region }}
      docker_password: ${{ steps.step1.outputs.docker_password }}
    steps:
      - uses: actions/checkout@v2
      - name: Decrypt
        run: ./.github/scripts/decrypt_secret.sh
        env:
          DEV_ENCRYPTION_KEY21: ${{ secrets.DEV_ENCRYPTION_KEY21 }}
      - id: step1
        run: |
          DOC_USER_NAME=$(cat $HOME/secrets/sec_encryption.json | jq '.DOC_USER_NAME')
          echo "::set-output name=doc_user_name::$DOC_USER_NAME"
          AWS_REGION=$(cat $HOME/secrets/sec_encryption.json | jq '.AWS_REGION')
          echo "::set-output name=aws_region::$AWS_REGION"
          AWS_REGION=$(cat $HOME/secrets/sec_encryption.json | jq '.DOCKER_PASSWORD')
          echo "::set-output name=docker_password::$AWS_REGION"
      - id: step2
        run: |
          mkdir -p "prod_dist"
          AWS_REGION=$(cat $HOME/secrets/sec_encryption.json | jq '.AWS_REGION')
          echo "::set-output name=aws_region::$AWS_REGION"
          cat $HOME/.env.encryption > .env.encryption
          ls -l $HOME
      - uses: actions/upload-artifact@v2
        with:
          name: env_develpement
          path: .env.encryption
      - uses: actions/upload-artifact@v2
        with:
          name: develpement_dist
          path: dist
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: env_develpement
      - uses: actions/download-artifact@v2
        with:
          name: develpement_dist
      - run: |
          cat .env.encryption
          ls -l dist
          echo "Checking........ yes"
          echo "testig workng..."
          npm run start
