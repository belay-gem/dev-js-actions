on:
  push:
    branches:
      - main
jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    # outputs:
    #   aws_region: ${{ steps.step2.outputs.aws_region }}
    steps:
      - uses: actions/checkout@v2
      - name: Decrypt DEV
        run: |
          ps aux | grep gpg
          ./.github/scripts/decrypt_dev_secret.sh
        env:
          DEV_KEY: ${{ secrets.DEV_KEY }}
      - name: Decrypt STAGING
        run: |
          ./.github/scripts/decrypt_staging_secret.sh
        env:
          STAGING_KEY: ${{ secrets.STAGING_KEY }}
      - name: Decrypt PROD
        run: |
          ./.github/scripts/decrypt_prod_secret.sh
        env:
          PROD_KEY: ${{ secrets.PROD_KEY }}
      # - id: step1
      #   run: |
      #     # DOC_USER_NAME=$(cat $HOME/secrets/sec_encryption.json | jq '.DOC_USER_NAME')
      #     # echo "::set-output name=doc_user_name::$DOC_USER_NAME"
      #     # AWS_REGION=$(cat $HOME/secrets/sec_encryption.json | jq '.AWS_REGION')
      #     # echo "::set-output name=aws_region::$AWS_REGION"
      #     # AWS_REGION=$(cat $HOME/secrets/sec_encryption.json | jq '.DOCKER_PASSWORD')
      #     # echo "::set-output name=docker_password::$AWS_REGION"
      #     echo "yesss"
      - id: step2
        run: |
          mkdir -p "prod_dist"
          # AWS_REGION=$(cat $HOME/secrets/sec_encryption.json | jq '.AWS_REGION')
          # echo "::set-output name=aws_region::$AWS_REGION"
          cat $HOME/.env.dev.encryption > .env.dev.encryption
          # cat $HOME/.env.staging.encryption > .env.staging.encryption
          # cat $HOME/.env.prod.encryption > .env.prod.encryption
          ls -l $HOME
      - uses: actions/upload-artifact@v2
        with:
          name: env_development
          path: .env.dev.encryption
      - uses: actions/upload-artifact@v2
        with:
          name: env_staging
          path: .env.staging.encryption
      - uses: actions/upload-artifact@v2
        with:
          name: env_production
          path: .env.prod.encryption
      - uses: actions/upload-artifact@v2
        with:
          name: development_dist
          path: dist
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: env_development
      - uses: actions/download-artifact@v2
        with:
          name: env_staging
      - uses: actions/download-artifact@v2
        with:
          name: env_production
      - uses: actions/download-artifact@v2
        with:
          name: development_dist
      - run: |
          cat .env.dev.encryption
          cat .env.staging.encryption
          cat .env.prod.encryption
          ls -l dist
          echo "Checking........ yes"
          echo "testig workng..."
          npm run start
