on: [push]
jobs:
  Decrypt:
    name: Testing encryption
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Decrypt large secret
        run: ./.github/scripts/decrypt_secret.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
      - name: Test printing your secret (Remove this step in production)
        run: |
          DOC_USER_NAME=$(cat $HOME/secrets/sec_encryption.json | jq '.DOC_USER_NAME')
          echo $DOC_USER_NAME
          printenv
  first-job:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Decrypt large secret
      run: ./.github/scripts/decrypt_secret.sh
      env:
        LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
    - name: Test printing your secret (Remove this step in production)
      id: env_settings
      run: |
        export DOC_USER_NAME=$(cat $HOME/secrets/sec_encryption.json | jq '.DOC_USER_NAME')
        export DOC_USER_NAME=$(cat $HOME/secrets/sec_encryption.json | jq '.DOCKER_PASSWORD')
        export DOC_USER_NAME=$(cat $HOME/secrets/sec_encryption.json | jq '.AWS_REGION')
        echo $DOC_USER_NAME
        echo "::set-output name=DOC_USER_NAME::${DOC_USER_NAME}"
        echo "::set-output name=DOCKER_PASSWORD::${DOCKER_PASSWORD}"
        echo "::set-output name=AWS_REGION::${AWS_REGION}"
    outputs:
      doc_user_name: ${{ steps.env_settings.outputs.DOC_USER_NAME }}
      docker_password: ${{ steps.env_settings.outputs.DOCKER_PASSWORD }}
      aws_region: ${{ steps.env_settings.outputs.AWS_REGION }}

  second-job:
    needs: first-job
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "${{ needs.first-job.outputs.doc_user_name }}"
        echo "${{ needs.first-job.outputs.docker_password }}"
        echo "${{ needs.first-job.outputs.aws_region }}"
