on: [push]
jobs:
  job1:
    name: Testing encryption
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Decrypt large secret
        run: ./.github/scripts/decrypt_secret.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
      - name: Test printing your secret (Remove this step in production)
        run: |
          export DOC_USER_NAME=$(cat $HOME/secrets/sec_encryption.json | jq '.DOC_USER_NAME')
          export DOCKER_PASSWORD=$(cat $HOME/secrets/sec_encryption.json | jq '.DOCKER_PASSWORD')
          export AWS_REGION=$(cat $HOME/secrets/sec_encryption.json | jq '.AWS_REGION')
          echo $DOC_USER_NAME
          printenv
      - id: step1
        run: |
          echo "::set-output name=doc_username::$DOC_USER_NAME"
          echo "::set-output name=doc_password::$DOCKER_PASSWORD"
          echo "::set-output name=aws_reg::$AWS_REGION"

      - id: step2
        run: echo "::set-output name=aws_reg::$AWS_REGION"
    outputs:
      output1: ${{ steps.step1.outputs.doc_username }}
      output2: ${{ steps.step1.outputs.doc_password }}
      output3: ${{ steps.step1.outputs.aws_reg }}
      output4: ${{ steps.step2.outputs.aws_reg }}

  job2:
    name: Running prints
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - run: |
        echo "${{needs.job1.outputs.output1}}""
        echo "${{needs.job1.outputs.output2}}"
        echo "${{needs.job1.outputs.output3}}"
        echo "${{needs.job1.outputs.output4}}"
